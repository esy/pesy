Rely array matchers › toContain › expect.array.toContain failure output
Running 1 test suite
<red><bold><inverse> FAIL </inverse></bold></red> <whiteBright>expect.array.toContain failure output</whiteBright>
<bold><red>  \226\128\162 expect.array.toContain failure output \226\128\186 empty array</red></bold>

    <dim>expect.array(</dim><red>array</red><dim>).toContain(</dim><green>value</green><dim>)</dim> <dim>/* using === */</dim>
    
    Expected array:
      <red>[||]</red>
    To contain value: 
      <green>7</green>

<bold><red>  \226\128\162 expect.array.toContain failure output \226\128\186 missing element</red></bold>

    <dim>expect.array(</dim><red>array</red><dim>).toContain(</dim><green>value</green><dim>)</dim> <dim>/* using === */</dim>
    
    Expected array:
      <red>{1, 2}</red>
    To contain value: 
      <green>7</green>

<bold><red>  \226\128\162 expect.array.toContain failure output \226\128\186 separate string references</red></bold>

    <dim>expect.array(</dim><red>array</red><dim>).toContain(</dim><green>value</green><dim>)</dim> <dim>/* using === */</dim>
    
    Expected array:
      <red>{\"foo\", \"bar\"}</red>
    To contain value: 
      <green>foo</green>
    
    <dim>Note that you are testing for referential equality between strings. You probably need to use `toContainEqual` instead.</dim>

<bold><red>  \226\128\162 expect.array.toContain failure output \226\128\186 separate record references</red></bold>

    <dim>expect.array(</dim><red>array</red><dim>).toContain(</dim><green>value</green><dim>)</dim> <dim>/* using === */</dim>
    
    Expected array:
      <red>{{\"Amy\", 19}}</red>
    To contain value: 
      <green>{\"Amy\", 19}</green>
    
    <dim>Note that you are testing for referential equality with the stricter `toContain` matcher. You probably need to use `toContainEqual` instead.</dim>


<whiteBright><bold>Test Suites: </bold></whiteBright><red><bold>1 failed</bold></red>, 0 passed, 1 total
<whiteBright><bold>Tests:       </bold></whiteBright><red><bold>4 failed</bold></red>, 0 passed, 4 total
<whiteBright><bold>Time:        </bold></whiteBright>< 1ms

