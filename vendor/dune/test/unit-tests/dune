(executable
 (name expect_test)
 (modules expect_test)
 (link_flags (-linkall))
 (modes byte)
 (libraries stdune wp_dune unix dune compiler-libs.toplevel test_common dag))

(ocamllex expect_test)

(executable
 (name sexp_tests)
 (modules sexp_tests)
 (libraries stdune dune_lang))

(alias
 (name runtest)
 (action (run ./sexp_tests.exe)))

(alias
 (name runtest)
 (deps (:t tests.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi)
  (source_tree toolchain.d)
  (source_tree findlib-db))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t filename.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t fiber.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/fiber/.fiber.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected))))
 (enabled_if (>= %{ocaml_version} "4.07.0"))
 ;Raise not found under ocaml 4.05.0
)

(alias
 (name runtest)
 (deps (:t import_dot_map.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t}) 
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t action.mlt) 
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t path.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t modules.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t sexp.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t dune_file.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t string.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (:t ocamlobjinfo.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtestmem)
 (deps (:t memoize.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/memo/.memo.objs/byte/*.cmi)
  (glob_files %{project_root}/src/fiber/.fiber.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected))))
 (enabled_if (>= %{ocaml_version} "4.07.0"))
 ;different output under ocaml 4.05.0
)
(alias
 (name runtest)
 (deps (alias runtestmem)))

(alias
 (name runtestdag)
 (deps (:t dag.mlt)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/dag/.dag.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))

(alias
 (name runtest)
 (deps (alias runtestdag)))

(alias
 (name runtest)
 (deps (:t catapult.mlt)
  (glob_files %{project_root}/src/.dune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/stdune/.stdune.objs/byte/*.cmi)
  (glob_files %{project_root}/src/catapult/.catapult.objs/byte/*.cmi))
 (action (chdir %{project_root}
          (progn
           (run %{exe:expect_test.exe} %{t})
           (diff? %{t} %{t}.corrected)))))
