name: Build npm release

variables:
  esy__ci_cache_version: v1    # this is available to all jobs in env as $ESY__CI_CACHE_VERSION or in azure config as $(esy__ci_cache_version)

trigger:
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - README.html
    - notes/*
    - "*.md"
    - LICENSE

jobs:
  - template: .ci/build-platform.yml
    parameters:
      platform: Linux
      vmImage: ubuntu-latest

  - template: .ci/build-platform.yml
    parameters:
      platform: macOS
      vmImage: macOS-latest

  # Need windows-2019 to do esy import/export-dependencies
  # which assumes you have bsdtar (tar.exe) in your system
  # otherwise it will end up using the esy-bash tar which doesn't
  # understand drives like D:/ (thinks it's an scp path).
  - template: .ci/build-platform.yml
    parameters:
      platform: Windows
      vmImage: windows-2019

  - job: Docker_Alpine_Build_Experimental
    displayName: Docker Alpine Build (experimental)
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        submodules: true
      - script: apt install jq gzip
        displayName: Install deps
      - script: docker build . -f docker/DevImage.Dockerfile --network=host -t $(jq .name package.json)-dev
        displayName: "Build Docker (dev) image"
      - script: docker container run -itd --network=host --name $(jq .name package.json)-container $(jq .name package.json)-dev
        displayName: "Run Docker container"
      - script:  docker cp $(jq .name package.json)-container:/app/_release $PWD/_container_release
        displayName: "Copy _release from container"
      - script: npm release
        workingDirectory: _container_release
        displayName: "Npm pack'ing"
      - task: PublishBuildArtifacts@1
        displayName: "Publish Docker built artifact"
        inputs:
          PathtoPublish: "_container_release/*.tgz"
          ArtifactName: DockerBuiltNPM.tgz
      - script: docker build . -f docker/ProdImage.Dockerfile --network=host -t $(jq .name package.json)
        displayName: "Build production Docker image"
      - script: docker save $(jq .name package.json) | gzip > $(jq .name package.json)-docker-image.tar.gz
        displayName: "Save Docker image as tarball"
      - task: PublishBuildArtifacts@1
        displayName: "Publish Docker production image"
        inputs:
          PathtoPublish: "$(jq .name package.json)-docker-image.tar.gz"
          ArtifactName: DockerBuiltNPM.tgz
          
  # This job is kept here as we want to have the platform names in the same file
  - job: Release
    displayName: Release
    dependsOn:
      - Linux
      - macOS
      - Windows
    pool:
      vmImage: macOS-latest
      demands: node.js
    steps:
      - template: .ci/cross-release.yml
