// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Utils$PesyBootstrapper = require("../src/Utils.bs.js");

Jest.describe("kebab function", (function (param) {
        Jest.test("sample 1", (function (param) {
                return Jest.Expect.toBe("esy-pesy", Jest.Expect.expect(Utils$PesyBootstrapper.kebab("Esy Pesy")));
              }));
        return Jest.test("sample 2", (function (param) {
                      return Jest.Expect.toBe("hello-world-2020!", Jest.Expect.expect(Utils$PesyBootstrapper.kebab("Hello-World-2020!")));
                    }));
      }));

Jest.describe("removeScope function", (function (param) {
        Jest.test("no forward slash", (function (param) {
                return Jest.Expect.toEqual("esy-pesy", Jest.Expect.expect(Utils$PesyBootstrapper.removeScope("esy-pesy")));
              }));
        Jest.test("forward slash at the beginning", (function (param) {
                return Jest.Expect.toEqual("esy-pesy", Jest.Expect.expect(Utils$PesyBootstrapper.removeScope("/esy-pesy")));
              }));
        Jest.test("forward slash in between", (function (param) {
                return Jest.Expect.toEqual("pesy", Jest.Expect.expect(Utils$PesyBootstrapper.removeScope("esy/pesy")));
              }));
        Jest.test("forward slash at the end", (function (param) {
                return Jest.Expect.toEqual("", Jest.Expect.expect(Utils$PesyBootstrapper.removeScope("esy-pesy/")));
              }));
        return Jest.test("multiple forward slashes", (function (param) {
                      return Jest.Expect.toEqual("squeezy", Jest.Expect.expect(Utils$PesyBootstrapper.removeScope("/esy/pesy/lemon/squeezy")));
                    }));
      }));

Jest.describe("upperCamelCasify function", (function (param) {
        Jest.test("should camelCasify", (function (param) {
                return Jest.Expect.toEqual("EsyPesy", Jest.Expect.expect(Utils$PesyBootstrapper.upperCamelCasify("esy-pesy")));
              }));
        Jest.test("forward slash(/) at the beginning", (function (param) {
                return Jest.Expect.toEqual("/esyPesy", Jest.Expect.expect(Utils$PesyBootstrapper.upperCamelCasify("/esy-pesy")));
              }));
        Jest.test("forward slash(/) in between", (function (param) {
                return Jest.Expect.toEqual("Esy/pesy", Jest.Expect.expect(Utils$PesyBootstrapper.upperCamelCasify("esy/pesy")));
              }));
        return Jest.test("forward slash(/) at the end", (function (param) {
                      return Jest.Expect.toEqual("EsyPesy/", Jest.Expect.expect(Utils$PesyBootstrapper.upperCamelCasify("esy-pesy/")));
                    }));
      }));

/*  Not a pure module */
